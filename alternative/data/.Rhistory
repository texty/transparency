html_nodes('.g-price-uah')%>%
html_text()
}
else {
price_current <- NA
}
if(length(price) == 0){
price <<- price_current
}
else {
price <<- c(price, price_current)
}
}#end of price-loop
status_container <- doc%>%
html_nodes('.g-i-tile-i-box')
status <-as.character()
for (j in 1:length(status_container)){
box <- toString(status_container[j])
if(grepl("g-i-status-wrap", box, perl = TRUE)) {
status_current <- status_container[j]%>%
html_nodes('.g-i-status-wrap')%>%
html_text()
}
else {
status_current <- NA
}
if(length(status) == 0){
status <<- status_current
}
else {
status <<- c(status, status_current)
}
}#end of status-loop
data.frame(id, name, price, status)
library(httr)
library(rvest)
library(dplyr)
library(stringr)
library(RSelenium)
library(XML)
driver<- rsDriver(browser=c("chrome"))
library(httr)
library(rvest)
library(dplyr)
library(stringr)
library(RSelenium)
library(XML)
library(RCurl)
url <- "https://rozetka.com.ua/palto-genskie/c4635201/"
remDr$navigate(url)
remDr <- driver[["client"]]
driver<- rsDriver(browser=c("chrome"))
url <- "https://rozetka.com.ua/palto-genskie/c4635201/"
remDr <- driver[["client"]]
remDr$navigate(url)
tryCatch ({
url <- "https://rozetka.com.ua/palto-genskie/c4635201/"
remDr$navigate(url)
doc <- remDr$getPageSource(url)
doc <- read_html(doc[[1]])
id <- doc%>%
html_nodes(".g-i-tile-i-title.clearfix a") %>%
html_attr('onclick')%>%
gsub(pattern = "[^0-9]", replacement="")
}, # First block
error=function(err){ driver<- rsDriver(browser=c("chrome"))
remDr <- driver[["client"]]},  # Optional Second Block
finally = {print ("finally print this")})
rozetka_web_page <- "https://rozetka.com.ua/mobile-phones/c80003/page="
rozetka_urls <- paste0("https://rozetka.com.ua/mobile-phones/c80003/page=",1:4,";preset=smartfon/")
rozetka_urls
tryCatch ({
for(i in 1:length(rozetka_urls)){
remDr$navigate(rozetka_urls[i])
doc <- remDr$getPageSource(rozetka_urls[i])
doc <- read_html(doc[[1]])
id <- doc%>%
html_nodes(".g-i-tile-i-title.clearfix a") %>%
html_attr('onclick')%>%
gsub(pattern = "[^0-9]", replacement="")
}
}, # First block
error=function(err){ driver<- rsDriver(browser=c("chrome"))
remDr <- driver[["client"]]},  # Optional Second Block
finally = { continue })
rozetka_web_page <- "https://rozetka.com.ua/mobile-phones/c80003/page="
rozetka_urls <- paste0("https://rozetka.com.ua/mobile-phones/c80003/page=",1:4,";preset=smartfon/")
rozetka_urls
tryCatch ({
for(i in 1:length(rozetka_urls)){
remDr$navigate(rozetka_urls[i])
doc <- remDr$getPageSource(rozetka_urls[i])
doc <- read_html(doc[[1]])
}
}, # First block
error=function(err){ driver<- rsDriver(browser=c("chrome"))
remDr <- driver[["client"]]},  # Optional Second Block
finally = {
remDr$navigate(rozetka_urls[i])
doc <- remDr$getPageSource(rozetka_urls[i])
doc <- read_html(doc[[1]])
id <- doc%>%
html_nodes(".g-i-tile-i-title.clearfix a") %>%
html_attr('onclick')%>%
gsub(pattern = "[^0-9]", replacement="")
})
remDr$navigate(rozetka_urls[i])
doc <- remDr$getPageSource(rozetka_urls[i])
doc <- read_html(doc[[1]])
driver<- rsDriver(browser=c("chrome"))
remDr <- driver[["client"]]
remDr$navigate(rozetka_urls[i])
doc <- remDr$getPageSource(rozetka_urls[i])
doc <- remDr$getPageSource(rozetka_urls[i])
doc <- read_html(doc[[1]])
id <- doc%>%
html_nodes(".g-i-tile-i-title.clearfix a") %>%
html_attr('onclick')%>%
gsub(pattern = "[^0-9]", replacement="")
driver<- rsDriver(browser=c("chrome"))
rozetka_urls <- paste0("https://rozetka.com.ua/mobile-phones/c80003/page=2;preset=smartfon/")
docker-machine ip
remDr$getStatus()
RSelenium::checkForServer(update = TRUE)
remDr$getStatus$message()
getstatus <- remDr$getStatus()
View(getstatus)
getstatus([1])
getstatus[[2]]
getstatus <- remDr$getStatus()
getstatus[[2]]
emDr$getStatus()
remDr$getStatus()
doc <- remDr$getPageSource(rozetka_urls[i])
remDr$getStatus()
remDr$navigate(rozetka_urls[i])
tryCatch ({
for(i in 1:length(rozetka_urls)){
remDr$navigate(rozetka_urls[i])
doc <- remDr$getPageSource(rozetka_urls[i])
doc <- read_html(doc[[1]])
}
}, # First block
error=function(err){ driver <- rsDriver(browser=c("chrome"))
remDr <- driver[["client"]]},  # Optional Second Block
finally = {
remDr$navigate(rozetka_urls[i])
doc <- remDr$getPageSource(rozetka_urls[i])
doc <- read_html(doc[[1]])
id <- doc%>%
html_nodes(".g-i-tile-i-title.clearfix a") %>%
html_attr('onclick')%>%
gsub(pattern = "[^0-9]", replacement="")
})
remDr$getStatus()
#запускаємо сервер
driver<- rsDriver(browser=c("chrome"))
remDr <- driver[["client"]]
remDr$getStatus()
doc <- remDr$getPageSource(rozetka_urls[i])
library(httr)
library(rvest)
library(dplyr)
library(stringr)
library(RCurl)
page <- 'https://comfy.ua/flat-tvs/?p='
product <- 'tv'
i <- 1
page_count <- {}
while (length(page_count) == 0 & i < 100) {
i <<- i + 1
Sys.sleep(2)
check_page_amount(page)
}
if (i >= 100){
i <<- 1
}
h <- read_html(url, encoding = "UTF8")
comfy_scraiper <- function(url) {
h <- read_html(url, encoding = "UTF8")
id <- h%>%
html_nodes('div.product-item__sku.hide-on-mobile')%>%
html_text()%>%
gsub(pattern = "\n", replacement="")%>%
trimws(which = "both")
name <- h %>%
html_nodes("a.product-item__name-link") %>%
html_text()%>%
gsub(pattern = "\n", replacement="")%>%
trimws(which = "both")
items__footer <- h %>% html_nodes('div.product-item__footer')
price <-as.character()
for (j in 1:length(items__footer)){
footer <- toString(items__footer[j])
if(grepl("price-box", footer, perl = TRUE) == FALSE) {
price_local_current <- NA
}
if(grepl("price-box", footer, perl = TRUE) == TRUE){
price_local_current <- items__footer[j] %>%
html_nodes(".price-box__content:not(.price-box__content_old)")%>%
html_text()%>%
gsub(pattern ="[^0-9\\.]", replacement = "")%>%
trimws(which = "both")
}
if(length(price) == 0){
price <- price_local_current
}
else {
price <- c(price, price_local_current)
}
}#end of FOR-loop
print(url)
Sys.sleep(30)
date <- Sys.Date()
site <- 'comfy.ua'
return (data.frame(site,id,name,price,date))
} #end of function
check_page_amount <- function(mainpage) {
mainpage_urls <- paste(mainpage, i, sep = "")
html <- read_html(mainpage_urls, encoding = "UTF8")
page_count_local <- html%>%
html_nodes('.pager__number_next.disabled')%>%
html_text()
page_count <<- page_count_local
}
page <- 'https://comfy.ua/flat-tvs/?p='
product <- 'tv'
i <- 1
page_count <- {}
while (length(page_count) == 0 & i < 100) {
i <<- i + 1
Sys.sleep(2)
check_page_amount(page)
}
if (i >= 100){
i <<- 1
}
install.packages('cronR')
library(cronR)
cronR:::cron_rstudioaddin()
install.packages('shinyFiles')
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
library(httr)
library(rvest)
library(dplyr)
library(stringr)
library(RSelenium)
library(XML)
library(RCurl)
driver<- rsDriver(browser=c("chrome"))
library(httr)
library(rvest)
library(dplyr)
library(stringr)
library(RSelenium)
library(XML)
library(RCurl)
driver<- rsDriver(browser=c("chrome"))
library(httr)
library(rvest)
library(rjson)
library(jsonlite)
library(osmar)
library(dplyr)
options(scipen = 999)
src <- osmsource_api()
bb <- center_bbox(30.5217545, 50.4068406, 1000, 1000)
src <- osmsource_api(url = "https://api.openstreetmap.org/api/0.6/")
ctown <- get_osm(bb, source = src)
plot(ctown)
plot(ctown)
points(30.5217545, 50.4068406, col = "red", lwd = 4)
names(ctown)
summary(ctown$ways$tags$k)
amenity <- find(ctown, way(tags(k == "amenity")))
amenity <- find_down(ctown, way(amenity))
amenity <- subset(ctown, ids = amenity)
amenity
amenity
str(amenity)
library(rlist)
df <- list.stack(amenity)
df <- list.stack(amenity, fill=T)
amenity$nodes
amenity$nodes$attrs
df <- amenity$nodes$attrs
View(df)
df <- amenity$ways$attrs
View(df)
summary(ctown$ways$tags$k)
df <- amenity$tags$attrs
dat <- getURL(paste("http://open.mapquestapi.com/xapi/api/0.6/", "way[amenity=*]", bb, sep = ""))
df <- amenity$ways$tags
bb <- center_bbox(30.489399, 50.440402, 1000, 1000)
src <- osmsource_api(url = "https://api.openstreetmap.org/api/0.6/")
ctown <- get_osm(bb, source = src)
# київськийзалізничний вокзал
src <- osmsource_api()
kyiv_railway_coords <- center_bbox(30.489399, 50.440402, 1000, 1000)
src <- osmsource_api(url = "https://api.openstreetmap.org/api/0.6/")
kyiv_railway <- get_osm(kyiv_railway_coords, source = src)
plot(kyiv_railway)
points(30.489399, 50.440402, col = "red", lwd = 4)
names(kyiv_railway)
summary(kyiv_railway$ways$tags$k)
amenity <- find(kyiv_railway, way(tags(k == "amenity")))
amenity <- find_down(kyiv_railway, way(amenity))
amenity <- subset(kyiv_railway, ids = amenity)
railway_food <- amenity$ways$tags
View(railway_food)
library(tidyr)
railway_food <- spread(railway_food, k, v)
railway_food <- railway_food%<%
filter(amenity == 'fast_food'|'restaurant'|'cafe'|'biergarten'|'bar'|'pub')
railway_food <- railway_food%>%
filter(amenity == 'fast_food'|'restaurant'|'cafe'|'biergarten'|'bar'|'pub')
railway_food <- railway_food%>%
filter(amenity == 'fast_food'|amenity == 'restaurant'| amenity =='cafe'|amenity == 'biergarten'|amenity == 'bar'|amenity == 'pub')
View(railway_food)
#київський автовокзал
kyiv_bus_coords <- center_bbox(30.5217545, 50.4068406, 1000, 1000)
src <- osmsource_api(url = "https://api.openstreetmap.org/api/0.6/")
kyiv_bus <- get_osm(kyiv_bus_coords, source = src)
plot(kyiv_bus)
points(30.5217545, 50.4068406, col = "red", lwd = 4)
names(kyiv_bus)
summary(kyiv_bus$ways$tags$k)
amenity <- find(kyiv_bus, way(tags(k == "amenity")))
amenity <- find_down(kyiv_bus, way(amenity))
amenity <- subset(kyiv_bus, ids = amenity)
bus_foods <- amenity$ways$tags
bus_food <- spread(bus_food, k, v)
bus_food <- bus_food%>%
filter(amenity == 'fast_food'|amenity == 'restaurant'| amenity =='cafe'|amenity == 'biergarten'|amenity == 'bar'|amenity == 'pub')
bus_foods <- amenity$ways$tags
bus_food <- spread(bus_food, k, v)
bus_food <- bus_food%>%
filter(amenity == 'fast_food'|amenity == 'restaurant'| amenity =='cafe'|amenity == 'biergarten'|amenity == 'bar'|amenity == 'pub')
bus_food <- amenity$ways$tags
bus_food <- spread(bus_food, k, v)
bus_food <- bus_food%>%
filter(amenity == 'fast_food'|amenity == 'restaurant'| amenity =='cafe'|amenity == 'biergarten'|amenity == 'bar'|amenity == 'pub')
View(kyiv_bus)
View(bus_food)
kyiv_railway_coords <- center_bbox(30.489399, 50.440402, 1500, 1500)
# київськийзалізничний вокзал
src <- osmsource_api()
kyiv_railway_coords <- center_bbox(30.489399, 50.440402, 1500, 1500)
src <- osmsource_api(url = "https://api.openstreetmap.org/api/0.6/")
kyiv_railway <- get_osm(kyiv_railway_coords, source = src)
plot(kyiv_railway)
points(30.489399, 50.440402, col = "red", lwd = 4)
kyiv_railway <- get_osm(kyiv_railway_coords, source = src)
plot(kyiv_railway)
points(30.489399, 50.440402, col = "red", lwd = 4)
names(kyiv_railway)
summary(kyiv_railway$ways$tags$k)
amenity <- find(kyiv_railway, way(tags(k == "amenity")))
amenity <- find_down(kyiv_railway, way(amenity))
amenity <- subset(kyiv_railway, ids = amenity)
railway_food <- amenity$ways$tags
railway_food <- spread(railway_food, k, v)
railway_food <- railway_food%>%
filter(amenity == 'fast_food'|amenity == 'restaurant'| amenity =='cafe'|amenity == 'biergarten'|amenity == 'bar'|amenity == 'pub')
View(railway_food)
kyiv_southRailway_coords <- center_bbox(30.4885747, 50.4399281, 1000, 1000)
src <- osmsource_api(url = "https://api.openstreetmap.org/api/0.6/")
kyiv_southRailway <- get_osm(kyiv_southRailway_coords, source = src)
plot(kyiv_southRailway)
points(30.4885747, 50.4399281, col = "red", lwd = 4)
names(kyiv_southRailway)
summary(kyiv_southRailway$ways$tags$k)
amenity <- find(kyiv_southRailway, way(tags(k == "amenity")))
amenity <- find_down(kyiv_southRailway, way(amenity))
amenity <- subset(kyiv_railway, ids = amenity)
southRailway_food <- amenity$ways$tags
southRailway_food <- amenity$ways$tags
southRailway_food <- spread(southRailway_food, k, v)
southRailway_food <- southRailway_food%>%
filter(amenity == 'fast_food'|amenity == 'restaurant'| amenity =='cafe'|amenity == 'biergarten'|amenity == 'bar'|amenity == 'pub')
View(southRailway_food)
n / 100 *42.5
n = 10000
n / 100 *42.5
for(i in 1:10){
n = n + (n / 100 *42.5)
}
n = 10000
for(i in 1:5){
n = n + (n / 100 *42.5)
}
n = 20000
for(i in 1:5){
n = n + (n / 100 *42.5)
}
n = 20000
for(i in 1:10){
n = n + (n / 100 *42.5)
}
n = 10000
for(i in 1:10){
n = n + (n / 100 *42.5)
}
library(httr)
library(rvest)
library(dplyr)
library(stringr)
library(RSelenium)
library(XML)
library(RCurl)
driver<- rsDriver(browser=c("chrome"), verbose = FALSE, version = "3.11.0")
remDr <- driver[["client"]]
#scraper <- function(schoolnumber) {
remDr$navigate('https://ident.familysearch.org/cis-web/oauth2/v3/authorization?client_secret=QvOLy4j9WdFQFefNxA7XnQhLV11eVGozdGOnpTQRQnxkIWSuOoSCVDVyAAdv6djB5kEj799IlGehdJQS9NB7hLCERETM4cMBZvLXwsr3RPCkwDI6BMGpPql5hk08smCHISR4RG3h2kBtuMRxMIhZrYiA8WnQytIgqsv8lwhIeyNBwODGgO1R%2BfS9i8fR4lbINJbTpb6Pi4zguMsaV8Bf0Ib%2BBQOMUJO5rETVsGmqeyVA0c2AIfiFAEQEpfyz17Q1WfNxwstELt9R8nf7Jm4SxUxyqN4l2qUWRcq%2B%2FpiJWzLrGGsbdauuz%2BnV5pZs7RJ7s4DbU1nvAK5TB2mptAriCQ%3D%3D&icid=hr-signin&response_type=code&redirect_uri=https%3A%2F%2Fwww.familysearch.org%2Fauth%2Ffamilysearch%2Fcallback&state=https%3A%2F%2Fwww.familysearch.org%2Fsearch%2Fark%3A%2F61903%2F3%3A1%3A3QSQ-G9Q9-37BD%3Fwc%3DM6CT-YM9%253A264175701%252C264211401%252C264275601%26cc%3D1985804&client_id=3Z3L-Z4GK-J7ZS-YT3Z-Q4KY-YN66-ZX5K-176R')
userName <- remDr$findElement('id', 'userName')
userName$sendKeysToElement(list(as.character("victorvd1")))
password <- remDr$findElement('id', 'password')
password$sendKeysToElement(list(as.character("B33Z8dmK")))
enterButtons <- remDr$findElement('id', 'login')$clickElement()
page = "https://l.facebook.com/l.php?u=https%3A%2F%2Fwww.familysearch.org%2Fark%3A%2F61903%2F3%3A1%3A3QSQ-G9Q9-37BD%3Fwc%3DM6CT-YM9%253A264175701%252C264211401%252C264275601%26cc%3D1985804&h=AT3ldmWfmQZIfvT1R23dPOW3L4jJvKaZDHcT0Cy5nxDiCBd6HMMI10x1h2nShVdvCMozl9tpB7YhI50yWS0YWNrd24l0tvgbsGbm7EhWSLrNQjbqnw"
html = read_html(page)
pageAmount <- html%>%
html_nodes('#openSDPagerInputContainer2 > label.afterInput')%>%
html_text()
html
targetPage <- remDr$getPageSource()
targetPage <- read_html(targetPage[[1]])
targetPage
pageAmount <- targetPage%>%
html_nodes('#openSDPagerInputContainer2 > label.afterInput')
toString(targetPage)
html = toString(targetPage)
grepl("openSDPagerInputContainer2", footer, perl = TRUE)
grepl("openSDPagerInputContainer2", html, perl = TRUE)
grepl("199", html, perl = TRUE)
html
grepl(".open-sd-actions-wrapper.toolbar-position", html, perl = TRUE)
pageAmount <- targetPage%>%
html_nodes('//*[@id="openSDPagerInputContainer2"]')
pageAmount <- remDr$findElement('xpath', '//*[@id="openSDPagerInputContainer2"]/label[2]')
remDr$navigate("https://www.familysearch.org/ark:/61903/3:1:3QSQ-G9Q9-37BD?wc=M6CT-YM9%3A264175701%2C264211401%2C264275601&cc=1985804")
page = "https://www.familysearch.org/ark:/61903/3:1:3QSQ-G9Q9-37BD?wc=M6CT-YM9%3A264175701%2C264211401%2C264275601&cc=1985804"
html = read_html(page)
targetPage <- remDr$getPageSource()
targetPage <- read_html(targetPage[[1]])
pageAmount <- targetPage%>%
html_nodes('#openSDPagerInputContainer2 > label.afterInput')%>%
html_text()
pageAmount <- targetPage%>%
html_nodes('#openSDPagerInputContainer2 > label.afterInput')%>%
html_text()%>%
gsub(pattern = "[^0-9]", replacement = '')
pageAmount <- targetPage%>%
html_nodes('#openSDPagerInputContainer2 > label.afterInput')%>%
html_text()%>%
gsub(pattern = "[^0-9]", replacement = '') %>%
as.numeric()
currentpage = remDr$findElement('class', 'openSDPagerInputText')
currentpage$sendKeysToElement(list(5, key = "enter"))
currentpage
currentpage$sendKeysToElement(list(as.character("5"), key = "enter"))
currentpage$clearElement()
currentpage$sendKeysToElement(list(as.character("5"), key = "enter"))
remDr$findElement('id', "saveLi").$clickElement()
currentpage$findElement('id', "saveLi").$clickElement()
currentpage$findElement('id', "saveLi")$clickElement()
remDr$findElement('id', "saveLi")$clickElement()
pageAmount = 10
urls <- c("https://www.familysearch.org/ark:/61903/3:1:3QSQ-G9Q9-37BD?wc=M6CT-YM9%3A264175701%2C264211401%2C264275601&cc=1985804",
"https://www.familysearch.org/ark:/61903/3:1:3QSQ-G9Q9-37BD?wc=M6CT-YM9%3A264175701%2C264211401%2C264275601&cc=1985804",
"https://www.familysearch.org/ark:/61903/3:1:3QSQ-G9Q9-37BD?wc=M6CT-YM9%3A264175701%2C264211401%2C264275601&cc=1985804",
"https://www.familysearch.org/ark:/61903/3:1:3QSQ-G9Q9-37BD?wc=M6CT-YM9%3A264175701%2C264211401%2C264275601&cc=1985804",
"https://www.familysearch.org/ark:/61903/3:1:3QSQ-G9Q9-37BD?wc=M6CT-YM9%3A264175701%2C264211401%2C264275601&cc=1985804"
)
urls[0]
urls[1]
remDr$quit()
library("tidyr")
library("dplyr")
setwd("/home/yevheniia/git/transparency/data")
file = "original.csv"
data = read.csv(file)
data$X = NULL
gathered = gather(data, "usage", "value", 2:19)
gathered$category <- gsub("\\.", " ", gathered$category)
gathered$value <- gsub("\\,", "\\.", gathered$value)
library("tidyr")
library("dplyr")
setwd("/home/yevheniia/git/transparency/data")
file = "original.csv"
data = read.csv(file)
data$X = NULL
gathered = gather(data, "usage", "value", 2:19)
gathered$category <- gsub("\\.", " ", gathered$category)
gathered$value <- gsub("\\,", "\\.", gathered$value)
gathered$value[is.na(gathered$value)] <- 0
gathered$value <- as.numeric(gathered$value)
gathered <- gathered %>%
group_by(usage)%>%
mutate(max = max(value)) %>%
ungroup()
gathered$share <- round((gathered$value / (gathered$max/100)), 0)
latlan = read.csv(file2)
file2 = "geocoded.csv"
latlan = read.csv(file2)
View(latlan)
View(latlan)
geocodedData = left_join(gathered, latlan, by = c("NEW.ID.2018"="social_network"))
View(geocodedData)
geocodedData$address <- NULL
write.csv(geocodedData, "geocoded.csv", row.names = F, fileEncoding = 'utf-8')
